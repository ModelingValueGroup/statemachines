package StateMachines.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptElement = createDescriptorForElement();
  /*package*/ final ConceptDescriptor myConceptEmpty = createDescriptorForEmpty();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStateMachine = createDescriptorForStateMachine();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptElement, myConceptEmpty, myConceptState, myConceptStateMachine, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Element:
        return myConceptElement;
      case LanguageConceptSwitch.Empty:
        return myConceptEmpty;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.StateMachine:
        return myConceptStateMachine;
      case LanguageConceptSwitch.Transition:
        return myConceptTransition;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateMachines", "Element", 0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797081e311L);
    b.class_(false, true, false);
    b.origin("r:732bdf84-14c6-4711-9496-853be06f2200(StateMachines.structure)/1353375090556920593");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmpty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateMachines", "Empty", 0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797085c707L);
    b.class_(false, false, false);
    // extends: StateMachines.structure.Element
    b.super_(0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797081e311L);
    b.origin("r:732bdf84-14c6-4711-9496-853be06f2200(StateMachines.structure)/1353375090557175559");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateMachines", "State", 0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797080ae8fL);
    b.class_(false, false, false);
    // extends: StateMachines.structure.Element
    b.super_(0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797081e311L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:732bdf84-14c6-4711-9496-853be06f2200(StateMachines.structure)/1353375090556841615");
    b.version(3);
    b.property("description", 0x12c8277970837859L).type(PrimitiveTypeId.STRING).origin("1353375090557024345").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStateMachine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateMachines", "StateMachine", 0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797081e306L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:732bdf84-14c6-4711-9496-853be06f2200(StateMachines.structure)/1353375090556920582");
    b.version(3);
    b.aggregate("elements", 0x12c827797081e312L).target(0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797081e311L).optional(true).ordered(true).multiple(true).origin("1353375090556920594").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("StateMachines", "Transition", 0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797081e30bL);
    b.class_(false, false, false);
    // extends: StateMachines.structure.Element
    b.super_(0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797081e311L);
    b.origin("r:732bdf84-14c6-4711-9496-853be06f2200(StateMachines.structure)/1353375090556920587");
    b.version(3);
    b.associate("from", 0x12c827797081e30cL).target(0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797080ae8fL).optional(false).origin("1353375090556920588").done();
    b.associate("to", 0x12c827797081e30eL).target(0xc840535e42134a05L, 0x832f5cc528f47f6eL, 0x12c827797080ae8fL).optional(false).origin("1353375090556920590").done();
    return b.create();
  }
}
